
    

  

<!DOCTYPE html>
<html>
  <head>
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="chrome=1">
    <script type="text/javascript">var NREUMQ=[];NREUMQ.push(["mark","firstbyte",new Date().getTime()]);</script>
        <title>socket.io.min.js at 06 from LearnBoost/Socket.IO - GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />

    <link href="https://a248.e.akamai.net/assets.github.com/0906e92d585b0180aae00108a58dc63ee67817bb/stylesheets/bundle_github.css" media="screen" rel="stylesheet" type="text/css" />
    

    <script type="text/javascript">
      if (typeof console == "undefined" || typeof console.log == "undefined")
        console = { log: function() {} }
    </script>
    <script type="text/javascript" charset="utf-8">
      var GitHub = {
        assetHost: 'https://a248.e.akamai.net/assets.github.com'
      }
      var github_user = 'temsa'
      
    </script>
    <script src="https://a248.e.akamai.net/assets.github.com/javascripts/jquery/jquery-1.6.1.min.js" type="text/javascript"></script>
    <script src="https://a248.e.akamai.net/assets.github.com/df956834986045362077968f64fceb78826da356/javascripts/bundle_github.js" type="text/javascript"></script>


    
    <script type="text/javascript" charset="utf-8">
      GitHub.spy({
        repo: "LearnBoost/Socket.IO"
      })
    </script>

    
  <link rel='canonical' href='/LearnBoost/Socket.IO/blob/804c4e281e67b0a74a41a01f34103461c5788612/socket.io.min.js'>

  <link href="https://github.com/LearnBoost/Socket.IO/commits/06.atom" rel="alternate" title="Recent Commits to Socket.IO:06" type="application/atom+xml" />

    <META NAME="ROBOTS" CONTENT="NOINDEX, FOLLOW">    <meta name="description" content="Socket.IO - Sockets for the rest of us" />
    <script type="text/javascript">
      GitHub.nameWithOwner = GitHub.nameWithOwner || "LearnBoost/Socket.IO";
      GitHub.currentRef = '06';
      GitHub.commitSHA = "804c4e281e67b0a74a41a01f34103461c5788612";
      GitHub.currentPath = 'socket.io.min.js';
      GitHub.masterBranch = "master";

      
    </script>
  

        <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-3769691-2']);
      _gaq.push(['_setDomainName', 'none']);
      _gaq.push(['_trackPageview']);
      _gaq.push(['_trackPageLoadTime']);
      (function() {
        var ga = document.createElement('script');
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        ga.setAttribute('async', 'true');
        document.documentElement.firstChild.appendChild(ga);
      })();
    </script>

    
  </head>

  

  <body class="logged_in page-blob  linux env-production">
    

    

    

    <div class="subnavd" id="main">
      <div id="header" class="true">
        
          <a class="logo boring" href="https://github.com/">
            
            <img alt="github" class="default" height="45" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov5.png" />
            <!--[if (gt IE 8)|!(IE)]><!-->
            <img alt="github" class="hover" height="45" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov5-hover.png" />
            <!--<![endif]-->
          </a>
        
        
          





  
    <div class="userbox">
      <div class="avatarname">
        <a href="https://github.com/temsa"><img src="https://secure.gravatar.com/avatar/32547db4ac6016b7ef8e02f9244e009b?s=140&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png" alt="" width="20" height="20"  /></a>
        <a href="https://github.com/temsa" class="name">temsa</a>

        
        
          <a href="https://github.com/inbox/notifications" class="unread_count notifications_count new tooltipped downwards js-notification-count" title="Unread Notifications">3</a>
        
      </div>
      <ul class="usernav">
        <li><a href="https://github.com/">Dashboard</a></li>
        <li>
          
          <a href="https://github.com/inbox">Inbox</a>
          <a href="https://github.com/inbox" class="unread_count ">0</a>
        </li>
        <li><a href="https://github.com/account">Account Settings</a></li>
        <li><a href="/logout">Log Out</a></li>
      </ul>
    </div><!-- /.userbox -->
  


        
        <div class="topsearch">
  
    <form action="/search" id="top_search_form" method="get">
      <a href="/search" class="advanced-search tooltipped downwards" title="Advanced Search">Advanced Search</a>
      <div class="search placeholder-field js-placeholder-field">
        <label class="placeholder" for="global-search-field">Search…</label>
        <input type="text" class="search my_repos_autocompleter" id="global-search-field" name="q" results="5" /> <input type="submit" value="Search" class="button" />
      </div>
      <input type="hidden" name="type" value="Everything" />
      <input type="hidden" name="repo" value="" />
      <input type="hidden" name="langOverride" value="" />
      <input type="hidden" name="start_value" value="1" />
    </form>
    <ul class="nav">
      <li><a href="/explore">Explore GitHub</a></li>
      <li><a href="https://gist.github.com">Gist</a></li>
      
      <li><a href="/blog">Blog</a></li>
      
      <li><a href="http://help.github.com">Help</a></li>
    </ul>
  
</div>

      </div>

      
      
        
    <div class="site">
      <div class="pagehead repohead vis-public    instapaper_ignore readability-menu">

      

      <div class="title-actions-bar">
        <h1>
          <a href="/LearnBoost">LearnBoost</a> / <strong><a href="/LearnBoost/Socket.IO">Socket.IO</a></strong>
          
          
        </h1>

        
    <ul class="actions">
      

      
        <li class="for-owner" style="display:none"><a href="/LearnBoost/Socket.IO/admin" class="minibutton btn-admin "><span><span class="icon"></span>Admin</span></a></li>
        <li>
          <a href="/LearnBoost/Socket.IO/toggle_watch" class="minibutton btn-watch " id="watch_button" onclick="var f = document.createElement('form'); f.style.display = 'none'; this.parentNode.appendChild(f); f.method = 'POST'; f.action = this.href;var s = document.createElement('input'); s.setAttribute('type', 'hidden'); s.setAttribute('name', 'authenticity_token'); s.setAttribute('value', '77e9e478f02fd3007a1b00492bbf47498aedbeda'); f.appendChild(s);f.submit();return false;" style="display:none"><span><span class="icon"></span>Watch</span></a>
          <a href="/LearnBoost/Socket.IO/toggle_watch" class="minibutton btn-watch " id="unwatch_button" onclick="var f = document.createElement('form'); f.style.display = 'none'; this.parentNode.appendChild(f); f.method = 'POST'; f.action = this.href;var s = document.createElement('input'); s.setAttribute('type', 'hidden'); s.setAttribute('name', 'authenticity_token'); s.setAttribute('value', '77e9e478f02fd3007a1b00492bbf47498aedbeda'); f.appendChild(s);f.submit();return false;" style="display:none"><span><span class="icon"></span>Unwatch</span></a>
        </li>
        
          
            <li class="for-notforked"><a href="#fork_box" class="minibutton btn-fork " rel="facebox"><span><span class="icon"></span>Fork</span></a></li>
            

            <div id="fork_box" style="display:none">
              <h2>Where do you want to fork this to?</h2>
              
                <div class="full-button">
                  <form action="/LearnBoost/Socket.IO/fork" method="post"><div style="margin:0;padding:0"><input name="authenticity_token" type="hidden" value="77e9e478f02fd3007a1b00492bbf47498aedbeda" /></div>
                    <button class="classy"><span>Fork to temsa</span></button>
                  </form>
                </div>
              
              
                <div class="rule"></div>
                
                  <div class="full-button">
                    <form action="/LearnBoost/Socket.IO/fork" method="post"><div style="margin:0;padding:0"><input name="authenticity_token" type="hidden" value="77e9e478f02fd3007a1b00492bbf47498aedbeda" /></div>
                      <input id="organization" name="organization" type="hidden" value="pullrequest" />
                      <button class="classy"><span>Fork to pullrequest (organization)</span></button>
                    </form>
                  </div>
                
              
            </div>
          

          <li id='pull_request_item' class='nspr' style='display:none'><a href="/LearnBoost/Socket.IO/pull/new/06" class="minibutton btn-pull-request "><span><span class="icon"></span>Pull Request</span></a></li>
        
      
      
      <li class="repostats">
        <ul class="repo-stats">
          <li class="watchers"><a href="/LearnBoost/Socket.IO/watchers" title="Watchers" class="tooltipped downwards">1,278</a></li>
          <li class="forks"><a href="/LearnBoost/Socket.IO/network" title="Forks" class="tooltipped downwards">98</a></li>
        </ul>
      </li>
    </ul>

      </div>

        
  <ul class="tabs">
    <li><a href="/LearnBoost/Socket.IO/tree/06" class="selected" highlight="repo_source">Source</a></li>
    <li><a href="/LearnBoost/Socket.IO/commits/06" highlight="repo_commits">Commits</a></li>
    <li><a href="/LearnBoost/Socket.IO/network" highlight="repo_network">Network</a></li>
    <li><a href="/LearnBoost/Socket.IO/pulls" highlight="repo_pulls">Pull Requests (18)</a></li>

    

    
      
      <li><a href="/LearnBoost/Socket.IO/issues" highlight="issues">Issues (63)</a></li>
    

            
    <li><a href="/LearnBoost/Socket.IO/graphs" highlight="repo_graphs">Graphs</a></li>

    <li class="contextswitch nochoices">
      <span class="toggle leftwards" >
        <em>Branch:</em>
        <code>06</code>
      </span>
    </li>
  </ul>

  <div style="display:none" id="pl-description"><p><em class="placeholder">click here to add a description</em></p></div>
  <div style="display:none" id="pl-homepage"><p><em class="placeholder">click here to add a homepage</em></p></div>

  <div class="subnav-bar">
  
  <ul>
    <li>
      <a href="/LearnBoost/Socket.IO/branches" class="dropdown">Switch Branches (3)</a>
      <ul>
        
          
            <li><strong>06 &#x2713;</strong></li>
            
          
          
            <li><a href="/LearnBoost/Socket.IO/blob/develop/socket.io.min.js" data-name="develop">develop</a></li>
          
        
          
          
            <li><a href="/LearnBoost/Socket.IO/blob/master/socket.io.min.js" data-name="master">master</a></li>
          
        
      </ul>
    </li>
    <li>
      <a href="#" class="dropdown ">Switch Tags (22)</a>
              <ul>
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.6.3/socket.io.min.js" data-name="0.6.3">0.6.3</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.6.2/socket.io.min.js" data-name="0.6.2">0.6.2</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.6.1/socket.io.min.js" data-name="0.6.1">0.6.1</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.6/socket.io.min.js" data-name="0.6">0.6</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.5.3/socket.io.min.js" data-name="0.5.3">0.5.3</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.5.2/socket.io.min.js" data-name="0.5.2">0.5.2</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.5.1/socket.io.min.js" data-name="0.5.1">0.5.1</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.5/socket.io.min.js" data-name="0.5">0.5</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.2.4/socket.io.min.js" data-name="0.2.4">0.2.4</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.2.3/socket.io.min.js" data-name="0.2.3">0.2.3</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.2.2/socket.io.min.js" data-name="0.2.2">0.2.2</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.2.1/socket.io.min.js" data-name="0.2.1">0.2.1</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.2.0/socket.io.min.js" data-name="0.2.0">0.2.0</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.1.8/socket.io.min.js" data-name="0.1.8">0.1.8</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.1.7/socket.io.min.js" data-name="0.1.7">0.1.7</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.1.6/socket.io.min.js" data-name="0.1.6">0.1.6</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.1.5/socket.io.min.js" data-name="0.1.5">0.1.5</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.1.4/socket.io.min.js" data-name="0.1.4">0.1.4</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.1.3/socket.io.min.js" data-name="0.1.3">0.1.3</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.1.2/socket.io.min.js" data-name="0.1.2">0.1.2</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.1.1/socket.io.min.js" data-name="0.1.1">0.1.1</a></li>
            
                      
              <li><a href="/LearnBoost/Socket.IO/blob/0.1/socket.io.min.js" data-name="0.1">0.1</a></li>
            
                  </ul>
      
    </li>
    <li>
    
    <a href="/LearnBoost/Socket.IO/branches/06" class="manage">Branch List</a>
    
    </li>
  </ul>
</div>

  
  
  
  
  
  



        
    <div id="repo_details" class="metabox clearfix">
      <div id="repo_details_loader" class="metabox-loader" style="display:none">Sending Request&hellip;</div>

        <a href="/LearnBoost/Socket.IO/downloads" class="download-source" id="download_button" title="Download source, tagged packages and binaries."><span class="icon"></span>Downloads</a>

      <div id="repository_desc_wrapper">
      <div id="repository_description" rel="repository_description_edit">
        
          <p>Sockets for the rest of us
            <span id="read_more" style="display:none">&mdash; <a href="#readme">Read more</a></span>
          </p>
        
      </div>

      <div id="repository_description_edit" style="display:none;" class="inline-edit">
        <form action="/LearnBoost/Socket.IO/admin/update" method="post"><div style="margin:0;padding:0"><input name="authenticity_token" type="hidden" value="77e9e478f02fd3007a1b00492bbf47498aedbeda" /></div>
          <input type="hidden" name="field" value="repository_description">
          <input type="text" class="textfield" name="value" value="Sockets for the rest of us">
          <div class="form-actions">
            <button class="minibutton"><span>Save</span></button> &nbsp; <a href="#" class="cancel">Cancel</a>
          </div>
        </form>
      </div>

      
      <div class="repository-homepage" id="repository_homepage" rel="repository_homepage_edit">
        <p><a href="http://socket.io" rel="nofollow">http://socket.io</a></p>
      </div>

      <div id="repository_homepage_edit" style="display:none;" class="inline-edit">
        <form action="/LearnBoost/Socket.IO/admin/update" method="post"><div style="margin:0;padding:0"><input name="authenticity_token" type="hidden" value="77e9e478f02fd3007a1b00492bbf47498aedbeda" /></div>
          <input type="hidden" name="field" value="repository_homepage">
          <input type="text" class="textfield" name="value" value="http://socket.io">
          <div class="form-actions">
            <button class="minibutton"><span>Save</span></button> &nbsp; <a href="#" class="cancel">Cancel</a>
          </div>
        </form>
      </div>
      </div>
      <div class="rule "></div>
      <div id="url_box" class="url-box">
  

  <ul class="clone-urls">
    
      
      <li id="http_clone_url"><a href="https://github.com/LearnBoost/Socket.IO.git" data-permissions="Read-Only">HTTP</a></li>
      <li id="public_clone_url"><a href="git://github.com/LearnBoost/Socket.IO.git" data-permissions="Read-Only">Git Read-Only</a></li>
    
    
  </ul>
  <input type="text" spellcheck="false" id="url_field" class="url-field" />
        <span style="display:none" id="url_box_clippy"></span>
      <span id="clippy_tooltip_url_box_clippy" class="clippy-tooltip tooltipped" title="copy to clipboard">
      <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"
              width="14"
              height="14"
              class="clippy"
              id="clippy" >
      <param name="movie" value="https://a248.e.akamai.net/assets.github.com/flash/clippy.swf?v5"/>
      <param name="allowScriptAccess" value="always" />
      <param name="quality" value="high" />
      <param name="scale" value="noscale" />
      <param NAME="FlashVars" value="id=url_box_clippy&amp;copied=&amp;copyto=">
      <param name="bgcolor" value="#FFFFFF">
      <param name="wmode" value="opaque">
      <embed src="https://a248.e.akamai.net/assets.github.com/flash/clippy.swf?v5"
             width="14"
             height="14"
             name="clippy"
             quality="high"
             allowScriptAccess="always"
             type="application/x-shockwave-flash"
             pluginspage="http://www.macromedia.com/go/getflashplayer"
             FlashVars="id=url_box_clippy&amp;copied=&amp;copyto="
             bgcolor="#FFFFFF"
             wmode="opaque"
      />
      </object>
      </span>

  <p id="url_description"><strong>Read+Write</strong> access</p>
</div>

    </div>

    <div class="frame frame-center tree-finder" style="display:none">
      <div class="breadcrumb">
        <b><a href="/LearnBoost/Socket.IO">Socket.IO</a></b> /
        <input class="tree-finder-input" type="text" name="query" autocomplete="off" spellcheck="false">
      </div>

      
        <div class="octotip">
          <p>
            <a href="/LearnBoost/Socket.IO/dismiss-tree-finder-help" class="dismiss js-dismiss-tree-list-help" title="Hide this notice forever">Dismiss</a>
            <strong>Octotip:</strong> You've activated the <em>file finder</em> by pressing <span class="kbd">t</span>
            Start typing to filter the file list. Use <span class="kbd badmono">↑</span> and <span class="kbd badmono">↓</span> to navigate,
            <span class="kbd">enter</span> to view files.
          </p>
        </div>
      

      <table class="tree-browser" cellpadding="0" cellspacing="0">
        <tr class="js-header"><th>&nbsp;</th><th>name</th></tr>
        <tr class="js-no-results no-results" style="display: none">
          <th colspan="2">No matching files</th>
        </tr>
        <tbody class="js-results-list">
        </tbody>
      </table>
    </div>

    <div id="jump-to-line" style="display:none">
      <h2>Jump to Line</h2>
      <form>
        <input class="textfield" type="text">
        <div class="full-button">
          <button type="submit" class="classy">
            <span>Go</span>
          </button>
        </div>
      </form>
    </div>


        

      </div><!-- /.pagehead -->

      

  







<script type="text/javascript">
  GitHub.downloadRepo = '/LearnBoost/Socket.IO/archives/06'
  GitHub.revType = "ref"

  GitHub.repoName = "Socket.IO"
  GitHub.controllerName = "blob"
  GitHub.actionName     = "show"
  GitHub.currentAction  = "blob#show"

  
    GitHub.loggedIn = true
    GitHub.hasWriteAccess = false
    GitHub.hasAdminAccess = false
    GitHub.watchingRepo = false
    GitHub.ignoredRepo = false
    GitHub.hasForkOfRepo = ""
    GitHub.hasForked = false
  

  
</script>




<div class="flash-messages"></div>


  <div id="commit">
    <div class="group">
        
  <div class="envelope commit">
    <div class="human">
      
        <div class="message"><pre><a href="/LearnBoost/Socket.IO/commit/804c4e281e67b0a74a41a01f34103461c5788612">Updated build</a> </pre></div>
      

      <div class="actor">
        <div class="gravatar">
          
          <img src="https://secure.gravatar.com/avatar/486e20e16ef676a02ac0299d2f92b813?s=140&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png" alt="" width="30" height="30"  />
        </div>
        <div class="name"><a href="/guille">guille</a> <span>(author)</span></div>
        <div class="date">
          <time class="js-relative-date" datetime="2011-06-09T14:04:20-07:00" title="2011-06-09 14:04:20">June 09, 2011</time>
        </div>
      </div>

      

    </div>
    <div class="machine">
      <span>c</span>ommit&nbsp;&nbsp;<a href="/LearnBoost/Socket.IO/commit/804c4e281e67b0a74a41a01f34103461c5788612" hotkey="c">804c4e281e67b0a74a41</a><br />
      <span>t</span>ree&nbsp;&nbsp;&nbsp;&nbsp;<a href="/LearnBoost/Socket.IO/tree/804c4e281e67b0a74a41a01f34103461c5788612" hotkey="t">ed630cbe4e8abbdad651</a><br />
      
        <span>p</span>arent&nbsp;
        
        <a href="/LearnBoost/Socket.IO/tree/d3f41d67a9971f1ae44acf2837d18c7d21afbb50" hotkey="p">d3f41d67a9971f1ae44a</a>
      

    </div>
  </div>

    </div>
  </div>



  <div id="slider">

  

    <div class="breadcrumb" data-path="socket.io.min.js/">
      <b><a href="/LearnBoost/Socket.IO/tree/804c4e281e67b0a74a41a01f34103461c5788612">Socket.IO</a></b> / socket.io.min.js       <span style="display:none" id="clippy_1711">socket.io.min.js</span>
      
      <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"
              width="110"
              height="14"
              class="clippy"
              id="clippy" >
      <param name="movie" value="https://a248.e.akamai.net/assets.github.com/flash/clippy.swf?v5"/>
      <param name="allowScriptAccess" value="always" />
      <param name="quality" value="high" />
      <param name="scale" value="noscale" />
      <param NAME="FlashVars" value="id=clippy_1711&amp;copied=copied!&amp;copyto=copy to clipboard">
      <param name="bgcolor" value="#FFFFFF">
      <param name="wmode" value="opaque">
      <embed src="https://a248.e.akamai.net/assets.github.com/flash/clippy.swf?v5"
             width="110"
             height="14"
             name="clippy"
             quality="high"
             allowScriptAccess="always"
             type="application/x-shockwave-flash"
             pluginspage="http://www.macromedia.com/go/getflashplayer"
             FlashVars="id=clippy_1711&amp;copied=copied!&amp;copyto=copy to clipboard"
             bgcolor="#FFFFFF"
             wmode="opaque"
      />
      </object>
      

    </div>

    <div class="frames">
      <div class="frame frame-center" data-path="socket.io.min.js/" data-canonical-url="/LearnBoost/Socket.IO/blob/804c4e281e67b0a74a41a01f34103461c5788612/socket.io.min.js">
        
          <ul class="big-actions">
            
            <li><a class="file-edit-link minibutton" href="/LearnBoost/Socket.IO/edit/__current_ref__/socket.io.min.js"><span>Edit this file</span></a></li>
          </ul>
        

        <div id="files">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><img alt="Txt" height="16" src="https://a248.e.akamai.net/assets.github.com/images/icons/txt.png" width="16" /></span>
                <span class="mode" title="File Mode">100644</span>
                
                  <span>2 lines (2 sloc)</span>
                
                <span>30.774 kb</span>
              </div>
              <ul class="actions">
                <li><a href="/LearnBoost/Socket.IO/raw/0.6.3/socket.io.min.js" id="raw-url">raw</a></li>
                
                  <li><a href="/LearnBoost/Socket.IO/blame/0.6.3/socket.io.min.js">blame</a></li>
                
                <li><a href="/LearnBoost/Socket.IO/commits/0.6.3/socket.io.min.js">history</a></li>
              </ul>
            </div>
            
  <div class="data type-javascript">
    
      <table cellpadding="0" cellspacing="0">
        <tr>
          <td>
            <pre class="line_numbers"><span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
</pre>
          </td>
          <td width="100%">
            
              
                <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/* Socket.IO.min 0.6.3 @author Guillermo Rauch &lt;guillermo@learnboost.com&gt;, @license The MIT license., @copyright Copyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt; */</span></div><div class='line' id='LC2'><span class="kd">var</span> <span class="nx">io</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">io</span><span class="o">=</span><span class="p">{</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;0.6.3&quot;</span><span class="p">,</span><span class="nx">setPath</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;io.setPath will be removed. Please set the variable WEB_SOCKET_SWF_LOCATION pointing to WebSocketMain.swf&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">path</span><span class="o">=</span><span class="sr">/\/$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="p">,</span><span class="nx">WEB_SOCKET_SWF_LOCATION</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;lib/vendor/web-socket-js/WebSocketMain.swf&quot;</span><span class="p">}};</span><span class="s2">&quot;jQuery&quot;</span><span class="k">in</span> <span class="k">this</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">jQuery</span><span class="p">.</span><span class="nx">io</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">io</span><span class="p">),</span><span class="k">typeof</span> <span class="nb">window</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">WEB_SOCKET_SWF_LOCATION</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">WEB_SOCKET_SWF_LOCATION</span><span class="o">=</span><span class="s2">&quot;/socket.io/lib/vendor/web-socket-js/WebSocketMain.swf&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">io</span><span class="p">,</span><span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="o">=</span><span class="p">{</span><span class="nx">load</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="sr">/loaded|complete/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">readyState</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">();</span><span class="s2">&quot;attachEvent&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="o">?</span><span class="nb">window</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onload&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)},</span><span class="nx">defer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">webkit</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">100</span><span class="p">)})},</span><span class="nx">inherit</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">c</span><span class="p">]},</span><span class="nx">indexOf</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">+</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span><span class="nx">isArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object Array]&quot;</span><span class="p">},</span><span class="nx">merge</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">])}},</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">webkit</span><span class="o">=</span><span class="sr">/webkit/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">})}(),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">io</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;~m~&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">==</span><span class="s2">&quot;[object Object]&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="s2">&quot;JSON&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;Socket.IO Error: Trying to encode as JSON, but JSON.stringify is missing.&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;console&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">)</span><span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span><span class="s1">&#39;{ &quot;$error&quot;: &quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot; }&#39;</span><span class="p">}</span><span class="k">return</span><span class="s2">&quot;~j~&quot;</span><span class="o">+</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">return</span> <span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="p">{</span><span class="nx">timeout</span><span class="o">:</span><span class="mi">15</span><span class="nx">e3</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Missing send() implementation&quot;</span><span class="p">)},</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">connect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Missing connect() implementation&quot;</span><span class="p">)},</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">disconnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Missing disconnect() implementation&quot;</span><span class="p">)},</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">encode</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">===</span><span class="kc">null</span><span class="o">||</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">===</span><span class="kc">undefined</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]),</span><span class="nx">e</span><span class="o">+=</span><span class="nx">b</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">f</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">decode</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">do</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">!==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">3</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="mi">1</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">==</span><span class="nx">e</span><span class="p">)</span><span class="nx">d</span><span class="o">+=</span><span class="nx">e</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">break</span><span class="p">}}</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">)),</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="k">while</span><span class="p">(</span><span class="nx">a</span><span class="o">!==</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onData</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">();</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">decode</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">onMessage</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">])},</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setTimeout</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">timeout</span><span class="o">&amp;&amp;</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">timeout</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">timeout</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">onTimeout</span><span class="p">()},</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">timeout</span><span class="p">)},</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onTimeout</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="p">()},</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onMessage</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionid</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">==</span><span class="s2">&quot;~h~&quot;</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">onHeartbeat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">==</span><span class="s2">&quot;~j~&quot;</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">onMessage</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">3</span><span class="p">)))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">onMessage</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionid</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">onConnect</span><span class="p">())},</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onHeartbeat</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s2">&quot;~h~&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">)},</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onConnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">connecting</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">onConnect</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">()},</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">connecting</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionid</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="p">()},</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">prepareUrl</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">secure</span><span class="o">?</span><span class="s2">&quot;https&quot;</span><span class="o">:</span><span class="s2">&quot;http&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;://&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">host</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">port</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">resource</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionid</span><span class="o">?</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionid</span><span class="o">:</span><span class="s2">&quot;/&quot;</span><span class="p">)}}(),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">io</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nb">Function</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="s2">&quot;XMLHttpRequest&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">withCredentials</span><span class="o">!=</span><span class="kc">undefined</span><span class="p">}(),</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;XDomainRequest&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="k">new</span> <span class="nx">XDomainRequest</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;XMLHttpRequest&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span> <span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">ActiveXObject</span><span class="p">(</span><span class="s2">&quot;MSXML2.XMLHTTP&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){}</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">ActiveXObject</span><span class="p">(</span><span class="s2">&quot;Microsoft.XMLHTTP&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){}}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">sendBuffer</span><span class="o">=</span><span class="p">[]};</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">connect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">checkSend</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">posting</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">sendBuffer</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">encode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sendBuffer</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">sendBuffer</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">sendIORequest</span><span class="p">(</span><span class="nx">a</span><span class="p">)}},</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">sendBuffer</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sendBuffer</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">sendBuffer</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">checkSend</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">sendIORequest</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">posting</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">sendXHR</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;send&quot;</span><span class="p">,</span><span class="s2">&quot;POST&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">sendXHR</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">sendXHR</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="mi">4</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">sendXHR</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">sendXHR</span><span class="p">.</span><span class="nx">status</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){}</span><span class="nx">c</span><span class="p">.</span><span class="nx">posting</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="o">==</span><span class="mi">200</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">checkSend</span><span class="p">()</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="p">()}},</span><span class="k">this</span><span class="p">.</span><span class="nx">sendXHR</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s2">&quot;data=&quot;</span><span class="o">+</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">disconnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">abort</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){}</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sendXHR</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">sendXHR</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">sendXHR</span><span class="p">.</span><span class="nx">abort</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){}</span><span class="k">this</span><span class="p">.</span><span class="nx">sendXHR</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">sendBuffer</span><span class="o">=</span><span class="p">[],</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">request</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">isXDomain</span><span class="p">());</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">multipart</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">prepareUrl</span><span class="p">()</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)),</span><span class="nx">b</span><span class="o">==</span><span class="s2">&quot;POST&quot;</span><span class="o">&amp;&amp;</span><span class="s2">&quot;setRequestHeader&quot;</span><span class="k">in</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">&quot;Content-type&quot;</span><span class="p">,</span><span class="s2">&quot;application/x-www-form-urlencoded; charset=utf-8&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">check</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">xdomainCheck</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">check</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">e</span><span class="p">.</span><span class="nx">request</span><span class="o">=</span><span class="nx">d</span><span class="p">}(),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">io</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">websocket</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;websocket&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">connect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="o">=</span><span class="k">new</span> <span class="nx">WebSocket</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prepareUrl</span><span class="p">()),</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">onmessage</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">onData</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">onclose</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="p">()},</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">onError</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">encode</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">disconnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">socket</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onError</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="p">,[</span><span class="nx">a</span><span class="p">])},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">prepareUrl</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">secure</span><span class="o">?</span><span class="s2">&quot;wss&quot;</span><span class="o">:</span><span class="s2">&quot;ws&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;://&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">host</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">port</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">resource</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionid</span><span class="o">?</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">sessionid</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">check</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;WebSocket&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="o">&amp;&amp;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="o">&amp;&amp;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="o">&amp;&amp;!!</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">match</span><span class="p">(</span><span class="sr">/native/i</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">WebSocket</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">xdomainCheck</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}}(),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">io</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">flashsocket</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">websocket</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">websocket</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;flashsocket&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">connect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__addTask</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">websocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">connect</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)});</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__addTask</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">websocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)});</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">check</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">WebSocket</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">||!</span><span class="p">(</span><span class="s2">&quot;__addTask&quot;</span><span class="k">in</span> <span class="nx">WebSocket</span><span class="p">)</span><span class="o">||!</span><span class="nx">swfobject</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">swfobject</span><span class="p">.</span><span class="nx">hasFlashPlayerVersion</span><span class="p">(</span><span class="s2">&quot;10.0.0&quot;</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">xdomainCheck</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}}(),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">io</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">htmlfile</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;htmlfile&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">open</span><span class="p">(),</span><span class="nb">window</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onunload&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()})},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="o">=</span><span class="k">new</span> <span class="nx">ActiveXObject</span><span class="p">(</span><span class="s2">&quot;htmlfile&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">open</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;html&gt;&lt;/html&gt;&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">parentWindow</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;iframe&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">prepareUrl</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span> <span class="o">+</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">onData</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">c</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">destroy</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="s2">&quot;about:blank&quot;</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){}</span><span class="k">this</span><span class="p">.</span><span class="nx">doc</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">CollectGarbage</span><span class="p">()}},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">disconnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">disconnect</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">check</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;ActiveXObject&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">ActiveXObject</span><span class="p">(</span><span class="s2">&quot;htmlfile&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">.</span><span class="nx">check</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">xdomainCheck</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}}(),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">io</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">[</span><span class="s2">&quot;xhr-multipart&quot;</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;xhr-multipart&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="mi">4</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">onData</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">responseText</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="kc">null</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">check</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;XMLHttpRequest&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="o">&amp;&amp;</span><span class="s2">&quot;prototype&quot;</span><span class="k">in</span> <span class="nx">XMLHttpRequest</span><span class="o">&amp;&amp;</span><span class="s2">&quot;multipart&quot;</span><span class="k">in</span> <span class="nx">XMLHttpRequest</span><span class="p">.</span><span class="nx">prototype</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">xdomainCheck</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}}(),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">io</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nb">Function</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">[</span><span class="s2">&quot;xhr-polling&quot;</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;xhr-polling&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">connect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">defer</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">connect</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">)});</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="o">+</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">),</span><span class="s2">&quot;GET&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="mi">4</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">status</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){}</span><span class="nx">c</span><span class="o">==</span><span class="mi">200</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">onData</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">responseText</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">())</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="p">()}},</span><span class="k">this</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="kc">null</span><span class="p">)},</span><span class="nx">c</span><span class="p">.</span><span class="nx">check</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">.</span><span class="nx">check</span><span class="p">()},</span><span class="nx">c</span><span class="p">.</span><span class="nx">xdomainCheck</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">.</span><span class="nx">xdomainCheck</span><span class="p">()}}(),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">io</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">[</span><span class="s2">&quot;jsonp-polling&quot;</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">.</span><span class="nx">XHR</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">insertAt</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">JSONP</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">JSONP</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">[</span><span class="s2">&quot;xhr-polling&quot;</span><span class="p">]),</span><span class="nx">a</span><span class="p">.</span><span class="nx">JSONP</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;jsonp-polling&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">sendIORequest</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">iframe</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">form</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">iframe</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="nx">f</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;&lt;iframe name=&quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">iframeId</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;iframe&quot;</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">iframeId</span><span class="p">}</span><span class="nx">f</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">iframeId</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">form</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">iframe</span><span class="o">=</span><span class="nx">f</span><span class="p">}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(){</span><span class="nx">h</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">posting</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">checkSend</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="s2">&quot;form&quot;</span><span class="k">in</span> <span class="k">this</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;FORM&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;TEXTAREA&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">iframeId</span><span class="o">=</span><span class="s2">&quot;socket_io_iframe_&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">index</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;-1000px&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="s2">&quot;-1000px&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">method</span><span class="o">=</span><span class="s2">&quot;POST&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">action</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">prepareUrl</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span> <span class="o">+</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">index</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;data&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">insertAt</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kc">null</span><span class="p">),</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">form</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">area</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="nx">h</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">posting</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">area</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">form</span><span class="p">.</span><span class="nx">submit</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">i</span><span class="p">){}</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">.</span><span class="nx">attachEvent</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">iframe</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="s2">&quot;complete&quot;</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">()}</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">iframe</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">g</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;SCRIPT&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">script</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">script</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">script</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">script</span><span class="o">=</span><span class="kc">null</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">async</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">prepareUrl</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span> <span class="o">+</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">index</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="p">()},</span><span class="k">this</span><span class="p">.</span><span class="nx">insertAt</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kc">null</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">script</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">onData</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">check</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">xdomainCheck</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}}(),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">io</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Socket</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">host</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">domain</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="p">{</span><span class="nx">secure</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nb">document</span><span class="o">:</span><span class="nb">document</span><span class="p">,</span><span class="nx">port</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">port</span><span class="o">||</span><span class="mi">80</span><span class="p">,</span><span class="nx">resource</span><span class="o">:</span><span class="s2">&quot;socket.io&quot;</span><span class="p">,</span><span class="nx">transports</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;websocket&quot;</span><span class="p">,</span><span class="s2">&quot;flashsocket&quot;</span><span class="p">,</span><span class="s2">&quot;htmlfile&quot;</span><span class="p">,</span><span class="s2">&quot;xhr-multipart&quot;</span><span class="p">,</span><span class="s2">&quot;xhr-polling&quot;</span><span class="p">,</span><span class="s2">&quot;jsonp-polling&quot;</span><span class="p">],</span><span class="nx">transportOptions</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;xhr-polling&quot;</span><span class="o">:</span><span class="p">{</span><span class="nx">timeout</span><span class="o">:</span><span class="mi">25</span><span class="nx">e3</span><span class="p">},</span><span class="s2">&quot;jsonp-polling&quot;</span><span class="o">:</span><span class="p">{</span><span class="nx">timeout</span><span class="o">:</span><span class="mi">25</span><span class="nx">e3</span><span class="p">}},</span><span class="nx">connectTimeout</span><span class="o">:</span><span class="mi">5</span><span class="nx">e3</span><span class="p">,</span><span class="nx">tryTransportsOnConnectTimeout</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">reconnect</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">reconnectionDelay</span><span class="o">:</span><span class="mi">500</span><span class="p">,</span><span class="nx">maxReconnectionAttempts</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">rememberTransport</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">connecting</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnecting</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getTransport</span><span class="p">(),</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="o">&amp;&amp;</span><span class="s2">&quot;console&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;No transport available&quot;</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getTransport</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">transports</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">rememberTransport</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="s2">&quot;(?:^|;)\\s*socketio=([^;]*)&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">rememberedTransport</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="nb">decodeURIComponent</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">])]));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">check</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">isXDomain</span><span class="p">()</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">xdomainCheck</span><span class="p">()))</span><span class="k">return</span> <span class="k">new</span> <span class="nx">a</span><span class="p">.</span><span class="nx">Transport</span><span class="p">[</span><span class="nx">f</span><span class="p">](</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">transportOptions</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">||</span><span class="p">{});</span><span class="k">return</span> <span class="kc">null</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">connect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">connecting</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">disconnect</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">connecting</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;connecting&quot;</span><span class="p">,[</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">type</span><span class="p">]),</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">connect</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">connectTimeout</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">connectTimeoutTimer</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">connected</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">disconnect</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tryTransportsOnConnectTimeout</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">rememberedTransport</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">remainingTransports</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">remainingTransports</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">transports</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">remainingTransports</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">type</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">transport</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getTransport</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">connect</span><span class="p">())}(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">remainingTransports</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">remainingTransports</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;connect_failed&quot;</span><span class="p">)}</span><span class="nx">b</span><span class="p">.</span><span class="nx">remainingTransports</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">remainingTransports</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">b</span><span class="p">.</span><span class="nx">remainingTransports</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">connectTimeout</span><span class="p">)}}</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">once</span><span class="p">(</span><span class="s2">&quot;connect&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="o">||!</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">connected</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">disconnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">connectTimeoutTimer</span><span class="o">&amp;&amp;</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">connectTimeoutTimer</span><span class="p">),</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">reconnect</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">disconnect</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">on</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">[]),</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">once</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">ref</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">emit</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">concat</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">===</span><span class="kc">undefined</span><span class="o">?</span><span class="p">[]</span><span class="o">:</span><span class="nx">b</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)(</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">c</span><span class="p">]</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">c</span><span class="p">].</span><span class="nx">ref</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">c</span><span class="p">].</span><span class="nx">ref</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">queue</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;queueStack&quot;</span><span class="k">in</span> <span class="k">this</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">queueStack</span><span class="o">=</span><span class="p">[]),</span><span class="k">this</span><span class="p">.</span><span class="nx">queueStack</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">doQueue</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="s2">&quot;queueStack&quot;</span><span class="k">in</span> <span class="k">this</span><span class="p">)</span><span class="o">||!</span><span class="k">this</span><span class="p">.</span><span class="nx">queueStack</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">queueStack</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">queueStack</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isXDomain</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">port</span><span class="o">||</span><span class="mi">80</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">host</span><span class="o">!==</span><span class="nb">document</span><span class="p">.</span><span class="nx">domain</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">port</span><span class="o">!=</span><span class="nx">a</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onConnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">connecting</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">doQueue</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">rememberTransport</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span><span class="o">=</span><span class="s2">&quot;socketio=&quot;</span><span class="o">+</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">type</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;connect&quot;</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onMessage</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;message&quot;</span><span class="p">,[</span><span class="nx">a</span><span class="p">])},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">connected</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">connecting</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">queueStack</span><span class="o">=</span><span class="p">[],</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;disconnect&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">reconnect</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnecting</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">onReconnect</span><span class="p">())},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onReconnect</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">reconnecting</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">connected</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">connecting</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">reconnecting</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">reconnectionTimer</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="nx">e3</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">reconnectionAttempts</span><span class="o">++&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxReconnectionAttempts</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">redoTransports</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;reconnect_failed&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">())</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connect_failed&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tryTransportsOnConnectTimeout</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">transport</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getTransport</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">transports</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">redoTransports</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">connect</span><span class="p">())</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">reconnectionDelay</span><span class="o">*=</span><span class="mi">2</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">connect</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;reconnecting&quot;</span><span class="p">,[</span><span class="nx">a</span><span class="p">.</span><span class="nx">reconnectionDelay</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">reconnectionAttempts</span><span class="p">]),</span><span class="nx">a</span><span class="p">.</span><span class="nx">reconnectionTimer</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">reconnectionDelay</span><span class="p">))}</span><span class="k">else</span> <span class="nx">d</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">connected</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;reconnect&quot;</span><span class="p">,[</span><span class="nx">a</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">reconnectionAttempts</span><span class="p">]),</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEvent</span><span class="p">(</span><span class="s2">&quot;connect_failed&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">).</span><span class="nx">removeEvent</span><span class="p">(</span><span class="s2">&quot;connect&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">reconnecting</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">reconnectionAttempts</span><span class="p">,</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">reconnectionDelay</span><span class="p">,</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">reconnectionTimer</span><span class="p">,</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">redoTransports</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tryTransportsOnConnectTimeout</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">rememberTransport</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">return</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnecting</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnectionAttempts</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnectionDelay</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">reconnectionDelay</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tryTransportsOnConnectTimeout</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">rememberTransport</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tryTransportsOnConnectTimeout</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnectionTimer</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">reconnectionDelay</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connect&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">fire</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">emit</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addListener</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addEvent</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">on</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeListener</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeEvent</span><span class="p">}();</span><span class="kd">var</span> <span class="nx">swfobject</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">V</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="sr">/[\\\&quot;&lt;&gt;\.;]/</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">!=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nb">encodeURIComponent</span><span class="o">!=</span><span class="nx">a</span><span class="o">?</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!!</span><span class="nx">x</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;visible&quot;</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">;</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">visibility</span><span class="o">=</span><span class="nx">c</span><span class="o">:</span><span class="nx">T</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;visibility:&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">T</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">.</span><span class="nx">ie</span><span class="o">||!</span><span class="nx">y</span><span class="p">.</span><span class="nx">mac</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="s2">&quot;screen&quot;</span><span class="p">;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="kc">null</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">v</span><span class="o">||</span><span class="nx">w</span><span class="o">!=</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">,</span><span class="s2">&quot;text/css&quot;</span><span class="p">),</span><span class="nx">j</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;media&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">v</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="nx">y</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">win</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">styleSheets</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">styleSheets</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">styleSheets</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">styleSheets</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]),</span><span class="nx">w</span><span class="o">=</span><span class="nx">h</span><span class="p">}</span><span class="nx">y</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">win</span><span class="o">?</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">v</span><span class="p">.</span><span class="nx">addRule</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">createTextNode</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; {&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">))}}</span><span class="kd">function</span> <span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">pv</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="mi">10</span><span class="p">),</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">==</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">&gt;=</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">o</span><span class="p">[</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){}</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">==</span><span class="s2">&quot;OBJECT&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">win</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="mi">4</span><span class="o">?</span><span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span><span class="mi">10</span><span class="p">)}())</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="s2">&quot;param&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">L</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">wk</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">wk</span><span class="o">&lt;</span><span class="mi">312</span><span class="p">)</span><span class="k">return</span> <span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">f</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">win</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">!=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="s2">&quot;data&quot;</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">movie</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="s2">&quot;styleclass&quot;</span><span class="o">?</span><span class="nx">i</span><span class="o">+=</span><span class="s1">&#39; class=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">!=</span><span class="s2">&quot;classid&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">j</span><span class="o">+</span><span class="s1">&#39;=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">!=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">+=</span><span class="s1">&#39;&lt;param name=&quot;&#39;</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="s1">&#39;&quot; value=&quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot; /&gt;&#39;</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">outerHTML</span><span class="o">=</span><span class="s1">&#39;&lt;object classid=&quot;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&quot;&#39;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;&gt;&quot;</span><span class="o">+</span><span class="nx">k</span><span class="o">+</span><span class="s2">&quot;&lt;/object&gt;&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">!=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="s2">&quot;styleclass&quot;</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">o</span><span class="p">])</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">!=</span><span class="s2">&quot;classid&quot;</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">o</span><span class="p">]));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">!=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">!=</span><span class="s2">&quot;movie&quot;</span><span class="o">&amp;&amp;</span><span class="nx">M</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">p</span><span class="p">]);</span><span class="nx">h</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">replaceChild</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">m</span><span class="p">}}</span><span class="k">return</span> <span class="nx">g</span><span class="p">}</span><span class="kd">function</span> <span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">win</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">ie</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">b</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)(</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">!=</span><span class="mi">1</span><span class="o">||</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">nodeName</span><span class="o">!=</span><span class="s2">&quot;PARAM&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">!=</span><span class="mi">8</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">))}}}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">win</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">readyState</span><span class="o">!=</span><span class="mi">4</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">replaceChild</span><span class="p">(</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="mi">4</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span><span class="mi">10</span><span class="p">)}()}</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">replaceChild</span><span class="p">(</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">u</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">success</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">id</span><span class="o">:</span><span class="nx">d</span><span class="p">};</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">==</span><span class="s2">&quot;OBJECT&quot;</span><span class="o">?</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">K</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">==</span><span class="nx">a</span><span class="o">||!</span><span class="sr">/%$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">310</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="s2">&quot;310&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">==</span><span class="nx">a</span><span class="o">||!</span><span class="sr">/%$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">137</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="s2">&quot;137&quot;</span><span class="p">;</span><span class="nx">i</span><span class="p">.</span><span class="nx">title</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">title</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">47</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; - Flash Player Installation&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">win</span><span class="o">?</span><span class="s2">&quot;ActiveX&quot;</span><span class="o">:</span><span class="s2">&quot;PlugIn&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="s2">&quot;MMredirectURL=&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&amp;/g</span><span class="p">,</span><span class="s2">&quot;%26&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&amp;MMplayerType=&quot;</span><span class="o">+</span><span class="nx">j</span><span class="o">+</span><span class="s2">&quot;&amp;MMdoctitle=&quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">title</span><span class="p">;</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">flashvars</span><span class="o">!=</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">flashvars</span><span class="o">+=</span><span class="s2">&quot;&amp;&quot;</span><span class="o">+</span><span class="nx">k</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">flashvars</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">win</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">readyState</span><span class="o">!=</span><span class="mi">4</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">d</span><span class="o">+=</span><span class="s2">&quot;SWFObjectNew&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="mi">4</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span><span class="mi">10</span><span class="p">)}()}</span><span class="nx">L</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">H</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">S</span><span class="p">(</span><span class="s2">&quot;6.0.65&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">win</span><span class="o">||</span><span class="nx">y</span><span class="p">.</span><span class="nx">mac</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">wk</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">wk</span><span class="o">&lt;</span><span class="mi">312</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">==</span><span class="s2">&quot;OBJECT&quot;</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">.</span><span class="nx">SetVariable</span><span class="o">!=</span><span class="nx">a</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">b</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">)}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">id</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">callbackFn</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">success</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">id</span><span class="o">:</span><span class="nx">d</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">pv</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">S</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">swfVersion</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">wk</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">wk</span><span class="o">&lt;</span><span class="mi">312</span><span class="p">))</span><span class="nx">U</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">success</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">ref</span><span class="o">=</span><span class="nx">G</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">f</span><span class="p">));</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">expressInstall</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">{};</span><span class="nx">h</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">expressInstall</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">styleclass</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">)),</span><span class="nx">g</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;align&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">align</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;align&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">{},</span><span class="nx">j</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;param&quot;</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="nx">j</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">!=</span><span class="s2">&quot;movie&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">j</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)]</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">));</span><span class="nx">I</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">else</span> <span class="nx">J</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">f</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">U</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">G</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">n</span><span class="p">.</span><span class="nx">SetVariable</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">success</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">ref</span><span class="o">=</span><span class="nx">n</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">f</span><span class="p">)}}}}</span><span class="kd">function</span> <span class="nx">E</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">f</span><span class="p">.</span><span class="nx">GetVariable</span><span class="o">!=</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">GetVariable</span><span class="p">(</span><span class="s2">&quot;$version&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="nx">y</span><span class="p">.</span><span class="nx">pv</span><span class="o">=</span><span class="p">[</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="mi">10</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">10</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="mi">10</span><span class="p">)])}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">&lt;</span><span class="mi">10</span><span class="p">){</span><span class="nx">g</span><span class="o">++</span><span class="p">,</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">F</span><span class="p">()})()}</span><span class="k">else</span> <span class="nx">F</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">D</span><span class="p">(){</span><span class="nx">k</span><span class="o">?</span><span class="nx">E</span><span class="p">()</span><span class="o">:</span><span class="nx">F</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">C</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">h</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">!=</span><span class="nx">a</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">!=</span><span class="nx">a</span><span class="p">)</span><span class="nx">i</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">h</span><span class="p">.</span><span class="nx">attachEvent</span><span class="o">!=</span><span class="nx">a</span><span class="p">)</span><span class="nx">R</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="s2">&quot;onload&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">h</span><span class="p">.</span><span class="nx">onload</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">onload</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">(),</span><span class="nx">b</span><span class="p">()}}</span><span class="k">else</span> <span class="nx">h</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">t</span><span class="o">?</span><span class="nx">a</span><span class="p">()</span><span class="o">:</span><span class="nx">l</span><span class="p">[</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">A</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">Q</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="nx">t</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">l</span><span class="p">[</span><span class="nx">d</span><span class="p">]()}}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;object&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;Shockwave Flash&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;ShockwaveFlash.ShockwaveFlash&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;application/x-shockwave-flash&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;SWFObjectExprInst&quot;</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nb">window</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nb">document</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">navigator</span><span class="p">,</span><span class="nx">k</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="p">[</span><span class="nx">D</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="p">[],</span><span class="nx">n</span><span class="o">=</span><span class="p">[],</span><span class="nx">o</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">t</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">u</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">x</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">getElementById</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">createElement</span><span class="o">!=</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">l</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">platform</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="o">?</span><span class="sr">/win/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="sr">/win/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">l</span><span class="o">?</span><span class="sr">/mac/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="sr">/mac/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="sr">/webkit/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^.*webkit\/(\d+(\.\d+)?).*$/</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">))</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">p</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">j</span><span class="p">.</span><span class="nx">plugins</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">j</span><span class="p">.</span><span class="nx">plugins</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="nx">r</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">plugins</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">description</span><span class="p">,</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">j</span><span class="p">.</span><span class="nx">mimeTypes</span><span class="o">==</span><span class="nx">a</span><span class="o">||!</span><span class="nx">j</span><span class="p">.</span><span class="nx">mimeTypes</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">||!!</span><span class="nx">j</span><span class="p">.</span><span class="nx">mimeTypes</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">enabledPlugin</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^.*\s+(\S+\s+\S+$)/</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">),</span><span class="nx">q</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^(.*)\..*$/</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^.*\.(.*)\s.*$/</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">q</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="sr">/[a-zA-Z]/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="o">?</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^.*[a-zA-Z]+(.*)$/</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">h</span><span class="p">.</span><span class="nx">ActiveXObject</span><span class="o">!=</span><span class="nx">a</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="k">new</span> <span class="nx">ActiveXObject</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">GetVariable</span><span class="p">(</span><span class="s2">&quot;$version&quot;</span><span class="p">),</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="p">[</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="mi">10</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">10</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="mi">10</span><span class="p">)]))}</span><span class="k">catch</span><span class="p">(</span><span class="nx">t</span><span class="p">){}</span><span class="k">return</span><span class="p">{</span><span class="nx">w3</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">pv</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">wk</span><span class="o">:</span><span class="nx">o</span><span class="p">,</span><span class="nx">ie</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">win</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">mac</span><span class="o">:</span><span class="nx">n</span><span class="p">}}(),</span><span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="o">!</span><span class="nx">y</span><span class="p">.</span><span class="nx">w3</span><span class="o">||</span><span class="p">((</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">readyState</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="s2">&quot;complete&quot;</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">body</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">(),</span><span class="nx">t</span><span class="o">||</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">y</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">win</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="s2">&quot;complete&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">),</span><span class="nx">A</span><span class="p">())}),</span><span class="nx">h</span><span class="o">==</span><span class="nx">top</span><span class="o">&amp;&amp;</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">i</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">doScroll</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">A</span><span class="p">()}}()),</span><span class="nx">y</span><span class="p">.</span><span class="nx">wk</span><span class="o">&amp;&amp;</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/loaded|complete/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">readyState</span><span class="p">)){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">A</span><span class="p">()}}(),</span><span class="nx">C</span><span class="p">(</span><span class="nx">A</span><span class="p">)))}(),</span><span class="nx">W</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">y</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">win</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onunload&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">o</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="nx">detachEvent</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="nx">o</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="mi">2</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">N</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span> <span class="k">in</span> <span class="nx">y</span><span class="p">)</span><span class="nx">y</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">y</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span> <span class="k">in</span> <span class="nx">swfobject</span><span class="p">)</span><span class="nx">swfobject</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">swfobject</span><span class="o">=</span><span class="kc">null</span><span class="p">})}();</span><span class="k">return</span><span class="p">{</span><span class="nx">registerObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">w3</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">{};</span><span class="nx">e</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">swfVersion</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">expressInstall</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">callbackFn</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">m</span><span class="p">[</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}</span><span class="k">else</span> <span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">({</span><span class="nx">success</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">id</span><span class="o">:</span><span class="nx">a</span><span class="p">})},</span><span class="nx">getObjectById</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">w3</span><span class="p">)</span><span class="k">return</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">embedSWF</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">{</span><span class="nx">success</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">id</span><span class="o">:</span><span class="nx">d</span><span class="p">};</span><span class="nx">y</span><span class="p">.</span><span class="nx">w3</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">wk</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">wk</span><span class="o">&lt;</span><span class="mi">312</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="nx">U</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">B</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="o">+=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">+=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">k</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span> <span class="k">in</span> <span class="nx">k</span><span class="p">)</span><span class="nx">n</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">o</span><span class="p">];</span><span class="nx">n</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">j</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">q</span> <span class="k">in</span> <span class="nx">j</span><span class="p">)</span><span class="nx">p</span><span class="p">[</span><span class="nx">q</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">q</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span> <span class="k">in</span> <span class="nx">i</span><span class="p">)</span><span class="k">typeof</span> <span class="nx">p</span><span class="p">.</span><span class="nx">flashvars</span><span class="o">!=</span><span class="nx">a</span><span class="o">?</span><span class="nx">p</span><span class="p">.</span><span class="nx">flashvars</span><span class="o">+=</span><span class="s2">&quot;&amp;&quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">:</span><span class="nx">p</span><span class="p">.</span><span class="nx">flashvars</span><span class="o">=</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">[</span><span class="nx">r</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">S</span><span class="p">(</span><span class="nx">g</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">id</span><span class="o">==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">U</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">success</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">ref</span><span class="o">=</span><span class="nx">s</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">()){</span><span class="nx">n</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">I</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">U</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="nx">m</span><span class="p">)}))</span><span class="o">:</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="nx">m</span><span class="p">)},</span><span class="nx">switchOffAutoHideShow</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">x</span><span class="o">=!</span><span class="mi">1</span><span class="p">},</span><span class="nx">ua</span><span class="o">:</span><span class="nx">y</span><span class="p">,</span><span class="nx">getFlashPlayerVersion</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">major</span><span class="o">:</span><span class="nx">y</span><span class="p">.</span><span class="nx">pv</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">minor</span><span class="o">:</span><span class="nx">y</span><span class="p">.</span><span class="nx">pv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">release</span><span class="o">:</span><span class="nx">y</span><span class="p">.</span><span class="nx">pv</span><span class="p">[</span><span class="mi">2</span><span class="p">]}},</span><span class="nx">hasFlashPlayerVersion</span><span class="o">:</span><span class="nx">S</span><span class="p">,</span><span class="nx">createSWF</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">y</span><span class="p">.</span><span class="nx">w3</span><span class="o">?</span><span class="nx">L</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="kc">undefined</span><span class="p">},</span><span class="nx">showExpressInstall</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">y</span><span class="p">.</span><span class="nx">w3</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">removeSWF</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">y</span><span class="p">.</span><span class="nx">w3</span><span class="o">&amp;&amp;</span><span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">createCSS</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">y</span><span class="p">.</span><span class="nx">w3</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">addDomLoadEvent</span><span class="o">:</span><span class="nx">B</span><span class="p">,</span><span class="nx">addLoadEvent</span><span class="o">:</span><span class="nx">C</span><span class="p">,</span><span class="nx">getQueryParamValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">search</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="sr">/\?/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="k">return</span> <span class="nx">V</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&amp;&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;=&quot;</span><span class="p">))</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">V</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">substring</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;=&quot;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">))}</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">expressInstallCallback</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">replaceChild</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">U</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">y</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">win</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;block&quot;</span><span class="p">)),</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">s</span><span class="p">)),</span><span class="nx">u</span><span class="o">=!</span><span class="mi">1</span><span class="p">}}}}();(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">window</span><span class="p">.</span><span class="nx">WebSocket</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">log</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">error</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">swfobject</span><span class="p">.</span><span class="nx">hasFlashPlayerVersion</span><span class="p">(</span><span class="s2">&quot;10.0.0&quot;</span><span class="p">)){</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;Flash Player &gt;= 10.0.0 is required.&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span><span class="o">==</span><span class="s2">&quot;file:&quot;</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;WARNING: web-socket-js doesn&#39;t work in file:///... URL unless you set Flash Security Settings properly. Open the page via Web server i.e. http://...&quot;</span><span class="p">),</span><span class="nx">WebSocket</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">__id</span><span class="o">=</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__nextId</span><span class="o">++</span><span class="p">,</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__instances</span><span class="p">[</span><span class="nx">f</span><span class="p">.</span><span class="nx">__id</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">readyState</span><span class="o">=</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CONNECTING</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">bufferedAmount</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">__events</span><span class="o">=</span><span class="p">{},</span><span class="nx">b</span><span class="o">?</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">:</span><span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__addTask</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">__id</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">||</span><span class="kc">null</span><span class="p">)})},</span><span class="mi">0</span><span class="p">)},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">send</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CONNECTING</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;INVALID_STATE_ERR: Web Socket connection has not been established&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">__id</span><span class="p">,</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">bufferedAmount</span><span class="o">+=</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">close</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">!=</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CLOSED</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">!=</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CLOSING</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">=</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CLOSING</span><span class="p">,</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">.</span><span class="nx">close</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">__id</span><span class="p">))},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">__events</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">__events</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">[]),</span><span class="k">this</span><span class="p">.</span><span class="nx">__events</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">__events</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__events</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="o">--</span><span class="nx">e</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">===</span><span class="nx">b</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">break</span><span class="p">}}},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__events</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">]</span><span class="o">||</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">](</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">];</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">__handleEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;readyState&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">readyState</span><span class="p">),</span><span class="s2">&quot;protocol&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">protocol</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">protocol</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;open&quot;</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;error&quot;</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__createSimpleEvent</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;close&quot;</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__createSimpleEvent</span><span class="p">(</span><span class="s2">&quot;close&quot;</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">!=</span><span class="s2">&quot;message&quot;</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;unknown event type: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">decodeURIComponent</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__createMessageEvent</span><span class="p">(</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">__createSimpleEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEvent</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">Event</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">(</span><span class="s2">&quot;Event&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">initEvent</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="k">return</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">bubbles</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">cancelable</span><span class="o">:!</span><span class="mi">1</span><span class="p">}},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">__createMessageEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEvent</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">MessageEvent</span><span class="o">&amp;&amp;!</span><span class="nb">window</span><span class="p">.</span><span class="nx">opera</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">(</span><span class="s2">&quot;MessageEvent&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">initMessageEvent</span><span class="p">(</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nb">window</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="k">return</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">bubbles</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">cancelable</span><span class="o">:!</span><span class="mi">1</span><span class="p">}},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CONNECTING</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">OPEN</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CLOSING</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">CLOSED</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__instances</span><span class="o">=</span><span class="p">{},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__tasks</span><span class="o">=</span><span class="p">[],</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__nextId</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">loadFlashPolicyFile</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__addTask</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">.</span><span class="nx">loadManualPolicyFile</span><span class="p">(</span><span class="nx">a</span><span class="p">)})},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__swfLocation</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">WEB_SOCKET_SWF_LOCATION</span><span class="o">=</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__swfLocation</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">window</span><span class="p">.</span><span class="nx">WEB_SOCKET_SWF_LOCATION</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;[WebSocket] set WEB_SOCKET_SWF_LOCATION to location of WebSocketMain.swf&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="s2">&quot;webSocketContainer&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__isFlashLite</span><span class="p">()</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="s2">&quot;0px&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;0px&quot;</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="s2">&quot;-100px&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;-100px&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="s2">&quot;webSocketFlash&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">swfobject</span><span class="p">.</span><span class="nx">embedSWF</span><span class="p">(</span><span class="nx">WEB_SOCKET_SWF_LOCATION</span><span class="p">,</span><span class="s2">&quot;webSocketFlash&quot;</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="s2">&quot;10.0.0&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,{</span><span class="nx">hasPriority</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">swliveconnect</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">allowScriptAccess</span><span class="o">:</span><span class="s2">&quot;always&quot;</span><span class="p">},</span><span class="kc">null</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">success</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;[WebSocket] swfobject.embedSWF failed&quot;</span><span class="p">)})}},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__onFlashInitialized</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;webSocketFlash&quot;</span><span class="p">),</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">.</span><span class="nx">setCallerUrl</span><span class="p">(</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">),</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">.</span><span class="nx">setDebug</span><span class="p">(</span><span class="o">!!</span><span class="nb">window</span><span class="p">.</span><span class="nx">WEB_SOCKET_DEBUG</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__tasks</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">a</span><span class="p">)</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__tasks</span><span class="p">[</span><span class="nx">a</span><span class="p">]();</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__tasks</span><span class="o">=</span><span class="p">[]},</span><span class="mi">0</span><span class="p">)},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__onFlashEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="p">.</span><span class="nx">receiveEvents</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__instances</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">webSocketId</span><span class="p">].</span><span class="nx">__handleEvent</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">])}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">d</span><span class="p">)}},</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__log</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">decodeURIComponent</span><span class="p">(</span><span class="nx">b</span><span class="p">))},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__error</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nb">decodeURIComponent</span><span class="p">(</span><span class="nx">b</span><span class="p">))},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__addTask</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__flash</span><span class="o">?</span><span class="nx">a</span><span class="p">()</span><span class="o">:</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__tasks</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__isFlashLite</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="o">||!</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">mimeTypes</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">mimeTypes</span><span class="p">[</span><span class="s2">&quot;application/x-shockwave-flash&quot;</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">enabledPlugin</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">enabledPlugin</span><span class="p">.</span><span class="nx">filename</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">enabledPlugin</span><span class="p">.</span><span class="nx">filename</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/flashlite/i</span><span class="p">)</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nb">window</span><span class="p">.</span><span class="nx">WEB_SOCKET_DISABLE_AUTO_INITIALIZATION</span><span class="o">||</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">?</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__initialize</span><span class="p">()},</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onload&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">__initialize</span><span class="p">()}))}})()</span></div></pre></div>
              
            
          </td>
        </tr>
      </table>
    
  </div>


          </div>
        </div>
      </div>
    </div>
  

  </div>


<div class="frame frame-loading" style="display:none;">
  <img src="https://a248.e.akamai.net/assets.github.com/images/modules/ajax/big_spinner_336699.gif" height="32" width="32">
</div>

    </div>
  
      
    </div>

    <div id="footer" class="clearfix">
      <div class="site">
        
          <div class="sponsor">
            <a href="http://www.rackspace.com" class="logo">
              <img alt="Dedicated Server" height="36" src="https://a248.e.akamai.net/assets.github.com/images/modules/footer/rackspace_logo.png?v2" width="38" />
            </a>
            Powered by the <a href="http://www.rackspace.com ">Dedicated
            Servers</a> and<br/> <a href="http://www.rackspacecloud.com">Cloud
            Computing</a> of Rackspace Hosting<span>&reg;</span>
          </div>
        

        <ul class="links">
          
            <li class="blog"><a href="https://github.com/blog">Blog</a></li>
            <li><a href="https://github.com/about">About</a></li>
            <li><a href="https://github.com/contact">Contact &amp; Support</a></li>
            <li><a href="https://github.com/training">Training</a></li>
            <li><a href="http://jobs.github.com">Job Board</a></li>
            <li><a href="http://shop.github.com">Shop</a></li>
            <li><a href="http://developer.github.com">API</a></li>
            <li><a href="http://status.github.com">Status</a></li>
          
        </ul>
        <ul class="sosueme">
          <li class="main">&copy; 2011 <span id="_rrt" title="0.17555s from fe6.rs.github.com">GitHub</span> Inc. All rights reserved.</li>
          <li><a href="/site/terms">Terms of Service</a></li>
          <li><a href="/site/privacy">Privacy</a></li>
          <li><a href="https://github.com/security">Security</a></li>
        </ul>
      </div>
    </div><!-- /#footer -->

    <script>window._auth_token = "77e9e478f02fd3007a1b00492bbf47498aedbeda"</script>
    

<div id="keyboard_shortcuts_pane" class="instapaper_ignore readability-extra" style="display:none">
  <h2>Keyboard Shortcuts <small><a href="#" class="js-see-all-keyboard-shortcuts">(see all)</a></small></h2>

  <div class="columns threecols">
    <div class="column first">
      <h3>Site wide shortcuts</h3>
      <dl class="keyboard-mappings">
        <dt>s</dt>
        <dd>Focus site search</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>?</dt>
        <dd>Bring up this help dialog</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column middle" style='display:none'>
      <h3>Commit list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selected down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selected up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>t</dt>
        <dd>Open tree</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>p</dt>
        <dd>Open parent</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>c <em>or</em> o <em>or</em> enter</dt>
        <dd>Open commit</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>y</dt>
        <dd>Expand URL to its canonical form</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column last" style='display:none'>
      <h3>Pull request list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selected down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selected up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>o <em>or</em> enter</dt>
        <dd>Open issue</dd>
      </dl>
    </div><!-- /.columns.last -->

  </div><!-- /.columns.equacols -->

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Issues</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selected down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selected up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>x</dt>
          <dd>Toggle select target</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column middle">
        <dl class="keyboard-mappings">
          <dt>I</dt>
          <dd>Mark selected as read</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>U</dt>
          <dd>Mark selected as unread</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>e</dt>
          <dd>Close selected</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Remove selected from view</dd>
        </dl>
      </div><!-- /.column.middle -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>c</dt>
          <dd>Create issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Create label</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>i</dt>
          <dd>Back to inbox</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>u</dt>
          <dd>Back to issues</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>/</dt>
          <dd>Focus issues search</dd>
        </dl>
      </div>
    </div>
  </div>

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Network Graph</h3>
    <div class="columns equacols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt><span class="badmono">←</span> <em>or</em> h</dt>
          <dd>Scroll left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">→</span> <em>or</em> l</dt>
          <dd>Scroll right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↑</span> <em>or</em> k</dt>
          <dd>Scroll up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↓</span> <em>or</em> j</dt>
          <dd>Scroll down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Toggle visibility of head labels</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">←</span> <em>or</em> shift h</dt>
          <dd>Scroll all the way left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">→</span> <em>or</em> shift l</dt>
          <dd>Scroll all the way right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↑</span> <em>or</em> shift k</dt>
          <dd>Scroll all the way up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↓</span> <em>or</em> shift j</dt>
          <dd>Scroll all the way down</dd>
        </dl>
      </div><!-- /.column.last -->
    </div>
  </div>

  <div >
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first" >
        <h3>Source Code Browsing</h3>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Activates the file finder</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Jump to line</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Expand URL to its canonical form</dd>
        </dl>
      </div>
    </div>
  </div>
</div>

    <div id="markdown-help" class="instapaper_ignore readability-extra">
  <h2>Markdown Cheat Sheet</h2>

  <div class="cheatsheet-content">

  <div class="mod">
    <div class="col">
      <h3>Format Text</h3>
      <p>Headers</p>
      <pre>
# This is an &lt;h1&gt; tag
## This is an &lt;h2&gt; tag
###### This is an &lt;h6&gt; tag</pre>
     <p>Text styles</p>
     <pre>
*This text will be italic*
_This will also be italic_
**This text will be bold**
__This will also be bold__

*You **can** combine them*
</pre>
    </div>
    <div class="col">
      <h3>Lists</h3>
      <p>Unordered</p>
      <pre>
* Item 1
* Item 2
  * Item 2a
  * Item 2b</pre>
     <p>Ordered</p>
     <pre>
1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b</pre>
    </div>
    <div class="col">
      <h3>Miscellaneous</h3>
      <p>Images</p>
      <pre>
![GitHub Logo](/images/logo.png)
Format: ![Alt Text](url)
</pre>
     <p>Links</p>
     <pre>
http://github.com - automatic!
[GitHub](http://github.com)</pre>
<p>Blockquotes</p>
     <pre>
As Kanye West said:
> We're living the future so
> the present is our past.
</pre>
    </div>
  </div>
  <div class="rule"></div>

  <h3>Code Examples in Markdown</h3>
  <div class="col">
      <p>Syntax highlighting with <a href="http://github.github.com/github-flavored-markdown/" title="GitHub Flavored Markdown">GFM</a></p>
      <pre>
```javascript
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```</pre>
    </div>
    <div class="col">
      <p>Or, indent your code 4 spaces</p>
      <pre>
Here is a Python code example
without syntax highlighting:

    def foo:
      if not bar:
        return true</pre>
    </div>
    <div class="col">
      <p>Inline code for comments</p>
      <pre>
I think you should use an
`&lt;addr&gt;` element here instead.</pre>
    </div>
  </div>

  </div>
</div>
    

    <!--[if IE 8]>
    <script type="text/javascript" charset="utf-8">
      $(document.body).addClass("ie8")
    </script>
    <![endif]-->

    <!--[if IE 7]>
    <script type="text/javascript" charset="utf-8">
      $(document.body).addClass("ie7")
    </script>
    <![endif]-->

    
    
    
    <script type="text/javascript">(function(){var d=document;var e=d.createElement("script");e.async=true;e.src="https://d1ros97qkrwjf5.cloudfront.net/11/eum/rum.js	";e.type="text/javascript";var s=d.getElementsByTagName("script")[0];s.parentNode.insertBefore(e,s);})();NREUMQ.push(["nrf2","beacon-1.newrelic.com","2f94e4d8c2",64799,"dw1bEBZcX1RWRhoEClsAGhcMXEQ=",0.0,172,new Date().getTime()])</script>
  </body>
</html>

